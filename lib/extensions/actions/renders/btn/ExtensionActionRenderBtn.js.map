{"version":3,"sources":["../../../../../src/extensions/actions/renders/btn/ExtensionActionRenderBtn.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAKqB,wB,GAGnB,kCACE,OADF,EAGG;AAAA;;AAED,MAAM,mBAAmB,GAAG,OAAO,CAAC,mBAApC;AAEA,OAAK,OAAL;AACE,IAAA,OADF,yBACsB;AAAA,UAAT,OAAS,QAAT,OAAS;AAClB,MAAA,OAAO,CAAC,QAAR,CAAiB,mBAAjB,EAAsC,OAAO,CAAC,cAA9C;AACD,KAHH;AAIE,IAAA,QAJF,2BAIwB;AAAA,UAAV,SAAU,SAAV,QAAU;AACpB,aAAO,CAAC,CAAC,SAAQ,CAAC,mBAAD,CAAV,IAAmC,SAAQ,CAAC,mBAAD,CAAR,CAA8B,OAAO,CAAC,eAAtC,CAA1C;AACD;AANH,KAOK,OAPL;AASD,C;;SAnBkB,wB","sourcesContent":["import ExtensionActionRenderBtnOptionsInterface\n  from '~/extensions/actions/renders/btn/ExtensionActionRenderBtnOptionsInterface'\n\ntype OptionalOptionsType = 'onClick' | 'isActive'\n\nexport default class ExtensionActionRenderBtn {\n  options: ExtensionActionRenderBtnOptionsInterface\n\n  constructor (\n    options: Omit<ExtensionActionRenderBtnOptionsInterface, OptionalOptionsType> & Partial<\n    Pick<ExtensionActionRenderBtnOptionsInterface, OptionalOptionsType>\n    >\n  ) {\n    const nativeExtensionName = options.nativeExtensionName!\n\n    this.options = {\n      onClick ({ context }) {\n        context.commands[nativeExtensionName](options.onClickOptions)\n      },\n      isActive ({ isActive }) {\n        return !!isActive[nativeExtensionName] && isActive[nativeExtensionName](options.isActiveOptions)\n      },\n      ...options\n    }\n  }\n}\n"],"sourceRoot":"","file":"ExtensionActionRenderBtn.js"}